<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.LabSystemBackend.dao.UserDao">

    <select id="getAllUsers" resultType="com.example.LabSystemBackend.entity.User">
        select *
        from user
        where userAccountStatus != 'CONFIRMING'
    </select>

    <select id="getAllAdministrators" resultType="com.example.LabSystemBackend.entity.User">
        select *
        from user
        where userRole = 'ADMIN'
           or userRole = 'SUPER_ADMIN'
    </select>

    <select id="getAllAccountToBeConfirmed" resultType="com.example.LabSystemBackend.entity.User">
        select *
        from user
        where userRole = 'VISITOR'
          and userAccountStatus = 'CONFIRMING'

    </select>

    <select id="getUser" resultType="com.example.LabSystemBackend.entity.User">
        select *
        from user
        where userId = #{userId}
        ORDER BY userId DESC limit 1
    </select>

    <delete id="deleteUser">
        delete
        from user
        where userId = #{userId}
    </delete>

    <insert id="insertUser" parameterType="com.example.LabSystemBackend.entity.User" useGeneratedKeys="true"
            keyProperty="userId">
        insert into user(firstName, lastName, email, userRole, userPassword, verifyCode, userAccountStatus)
        values (#{user.firstName}, #{user.lastName}, #{user.email}, #{user.userRole},
                #{user.userPassword}, #{user.verifyCode}, #{user.userAccountStatus})
    </insert>

    <update id="updatePassword">
        update user
        set userPassword = #{password}
        where userId = #{userId}
    </update>

    <update id="updateUserAccountStatus">
        update user
        set userAccountStatus = #{userAccountStatus}
        where userId = #{userId}
    </update>

    <update id="updateName">
        update user
        set firstName = #{firstName},
            lastName  = #{lastName}
        where userId = #{userId}

    </update>

    <update id="updateUserRole">
        update user
        set userRole = #{userRole}
        where userId = #{userId}
    </update>

    <select id="getUserByEmailAndPassword" resultType="com.example.LabSystemBackend.entity.User">
        select *
        from user
        where email = #{email}
          and userPassword = #{password}
        ORDER BY userId DESC limit 1
    </select>

    <select id="getUserByEmail" resultType="com.example.LabSystemBackend.entity.User">
        select *
        from user
        where email = #{email}
        ORDER BY userId DESC limit 1
    </select>

    <select id="getLastUser" resultType="com.example.LabSystemBackend.entity.User">
        select *
        from user
        order by userId desc limit 1
    </select>

</mapper>